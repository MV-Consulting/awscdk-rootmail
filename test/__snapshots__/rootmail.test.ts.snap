// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rootmail-autoDns rootmail-create-with-autoDNSEnable 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "5cc92ed0cea39e2b8de2dbc527dfb5980a3af9564bd1084d840b9787c7d0467e.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsprovideriscompletehandlerBFD3F7F5": {
      "DependsOn": [
        "rootmailautowirednsprovideriscompletehandlerServiceRoleDefaultPolicy7DA8ECD2",
        "rootmailautowirednsprovideriscompletehandlerServiceRole35CABB06",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "409d1db869dd0ed635bff94c855031afc92e9ac918a5d09651dd0b5316db1433.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsprovideriscompletehandlerServiceRole35CABB06",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsprovideriscompletehandlerLogRetention304C1822": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailautowirednsprovideriscompletehandlerServiceRole35CABB06": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsprovideriscompletehandlerServiceRoleDefaultPolicy7DA8ECD2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "route53:ListHostedZonesByName",
                "route53:GetChange",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:1234:parameter",
                    {
                      "Ref": "testRootmailHostedZoneDkimRootmailAutowireDnsAutoWireR53ChangeInfoId609129D7",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsprovideriscompletehandlerServiceRoleDefaultPolicy7DA8ECD2",
        "Roles": [
          {
            "Ref": "rootmailautowirednsprovideriscompletehandlerServiceRole35CABB06",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsprovideroneventhandler2ADE543F": {
      "DependsOn": [
        "rootmailautowirednsprovideroneventhandlerServiceRoleDefaultPolicy4A5BBAB1",
        "rootmailautowirednsprovideroneventhandlerServiceRole6D9F81B0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "aca912f8a6aebc5dfd423aff79785b8fd7488473a4cf93aaa7ad0e442b548787.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsprovideroneventhandlerServiceRole6D9F81B0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 160,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsprovideroneventhandlerLogRetentionA4DB1AD5": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailautowirednsprovideroneventhandler2ADE543F",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailautowirednsprovideroneventhandlerServiceRole6D9F81B0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsprovideroneventhandlerServiceRoleDefaultPolicy4A5BBAB1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:1234:parameter",
                    {
                      "Ref": "testRootmailHostedZoneSSMParameter574DA41C",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:1234:parameter",
                    {
                      "Ref": "testRootmailHostedZoneDkimRootmailAutowireDnsAutoWireR53ChangeInfoId609129D7",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "route53:ListHostedZonesByName",
                "route53:GetChange",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "route53:ListResourceRecordSets",
                "route53:ChangeResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:route53:::hostedzone/HZX1234",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsprovideroneventhandlerServiceRoleDefaultPolicy4A5BBAB1",
        "Roles": [
          {
            "Ref": "rootmailautowirednsprovideroneventhandlerServiceRole6D9F81B0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteC48DABD2": {
      "DependsOn": [
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleDefaultPolicy5728F288",
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleD15A96AC",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (testStack/rootmail.autowire-dns-provider/rootmail-autowire-dns-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideroneventhandler2ADE543F",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleD15A96AC",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleD15A96AC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleDefaultPolicy5728F288": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideroneventhandler2ADE543F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideroneventhandler2ADE543F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleDefaultPolicy5728F288",
        "Roles": [
          {
            "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleD15A96AC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventAA9D49B6": {
      "DependsOn": [
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleDefaultPolicy16D799D5",
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleECC96780",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (testStack/rootmail.autowire-dns-provider/rootmail-autowire-dns-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideroneventhandler2ADE543F",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachine81102355",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleECC96780",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleDefaultPolicy16D799D5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideroneventhandler2ADE543F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideroneventhandler2ADE543F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachine81102355",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleDefaultPolicy16D799D5",
        "Roles": [
          {
            "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleECC96780",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleECC96780": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutC714B95F": {
      "DependsOn": [
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRoleDefaultPolicy53D3B624",
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRole4383D224",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (testStack/rootmail.autowire-dns-provider/rootmail-autowire-dns-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideroneventhandler2ADE543F",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRole4383D224",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRole4383D224": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRoleDefaultPolicy53D3B624": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideroneventhandler2ADE543F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideroneventhandler2ADE543F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRoleDefaultPolicy53D3B624",
        "Roles": [
          {
            "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRole4383D224",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachine81102355": {
      "DependsOn": [
        "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRoleDefaultPolicy310226B4",
        "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRole258A7061",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":5,"MaxAttempts":1440,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteC48DABD2",
                  "Arn",
                ],
              },
              ""},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutC714B95F",
                  "Arn",
                ],
              },
              ""}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRole258A7061",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRole258A7061": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRoleDefaultPolicy310226B4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteC48DABD2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteC48DABD2",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutC714B95F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutC714B95F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRoleDefaultPolicy310226B4",
        "Roles": [
          {
            "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRole258A7061",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkisComplete165FE163": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRoleDefaultPolicy02D0AEA6",
        "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRole9BABA5E5",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (testStack/rootmail.hosted-zone-dkim-propagation-provider/hosted-zone-dkim-propagation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRole9BABA5E5",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRole9BABA5E5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRoleDefaultPolicy02D0AEA6": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRoleDefaultPolicy02D0AEA6",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRole9BABA5E5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonEvent15357119": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRoleDefaultPolicy68675555",
        "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRole5729BE95",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (testStack/rootmail.hosted-zone-dkim-propagation-provider/hosted-zone-dkim-propagation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "rootmailhostedzonedkimpropagationproviderwaiterstatemachine2C629ADB",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRole5729BE95",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRole5729BE95": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRoleDefaultPolicy68675555": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "rootmailhostedzonedkimpropagationproviderwaiterstatemachine2C629ADB",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRoleDefaultPolicy68675555",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRole5729BE95",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonTimeout7D8A73CD": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleDefaultPolicy2FF6168E",
        "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleB169BF13",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (testStack/rootmail.hosted-zone-dkim-propagation-provider/hosted-zone-dkim-propagation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleB169BF13",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleB169BF13": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleDefaultPolicy2FF6168E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleDefaultPolicy2FF6168E",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleB169BF13",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDefaultPolicy57D46916",
        "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDFD2C35E",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the ses mail verification",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f61472ea141af20f69ebb7a7718158fcb95d72410c0c2a2e72cc59b1822873fc.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDFD2C35E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationprovideriscompletehandlerLogRetentionA997105A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the ses mail verification",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDFD2C35E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the ses mail verification",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDefaultPolicy57D46916": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the ses mail verification",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:GetIdentityVerificationAttributes",
                "ses:GetAccountSendingEnabled",
                "ses:GetIdentityDkimAttributes",
                "ses:GetIdentityNotificationAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDefaultPolicy57D46916",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDFD2C35E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationprovideroneventhandlerServiceRole02FD73CE",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok as the function by itself does nothing",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "11768574bbd12c5ed10f463a68797423c366b61535ebc1b14951661b92657fa5.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationprovideroneventhandlerServiceRole02FD73CE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationprovideroneventhandlerLogRetentionD97E8A18": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok as the function by itself does nothing",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailhostedzonedkimpropagationprovideroneventhandlerServiceRole02FD73CE": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok as the function by itself does nothing",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderwaiterstatemachine2C629ADB": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRoleDefaultPolicy70368CA0",
        "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRole40906579",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":10,"MaxAttempts":180,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailhostedzonedkimpropagationproviderframeworkisComplete165FE163",
                  "Arn",
                ],
              },
              ""},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailhostedzonedkimpropagationproviderframeworkonTimeout7D8A73CD",
                  "Arn",
                ],
              },
              ""}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRole40906579",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRole40906579": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRoleDefaultPolicy70368CA0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationproviderframeworkisComplete165FE163",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationproviderframeworkisComplete165FE163",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationproviderframeworkonTimeout7D8A73CD",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationproviderframeworkonTimeout7D8A73CD",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRoleDefaultPolicy70368CA0",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRole40906579",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimverificationrecordsproviderframeworkonEvent801E57DE": {
      "DependsOn": [
        "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleDefaultPolicy2775D1BA",
        "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleA09812EA",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (testStack/rootmail.hosted-zone-dkim-verification-records-provider/hosted-zone-dkim-verification-records-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleA09812EA",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventLogRetention64AEF97C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailhostedzonedkimverificationrecordsproviderframeworkonEvent801E57DE",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleA09812EA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleDefaultPolicy2775D1BA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleDefaultPolicy2775D1BA",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleA09812EA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE": {
      "DependsOn": [
        "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRoleDefaultPolicy5C0E86C8",
        "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRole83E5B139",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "a0f9d47d625e1e17d1946bc138cc46c9b7ecb7136dc54cf26af266b0e30b4e15.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRole83E5B139",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 200,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerLogRetentionCA165FC4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRole83E5B139": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRoleDefaultPolicy5C0E86C8": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:VerifyDomainDkim",
                "ses:VerifyDomainIdentity",
                "ses:DeleteIdentity",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRoleDefaultPolicy5C0E86C8",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRole83E5B139",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleA5C4F5B4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleDefaultPolicy92E90A6D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:CreateReceiptRuleSet",
                "ses:CreateReceiptRule",
                "ses:SetActiveReceiptRuleSet",
                "ses:DeleteReceiptRule",
                "ses:DeleteReceiptRuleSet",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleDefaultPolicy92E90A6D",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleA5C4F5B4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleDefaultPolicy8A8828E7",
        "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleCFD6EE46",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (testStack/rootmail.ses-receipt-ruleset-activation-provider/ses-receipt-ruleset-activation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleCFD6EE46",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteLogRetention13DDD3A2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleCFD6EE46": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleDefaultPolicy8A8828E7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleDefaultPolicy8A8828E7",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleCFD6EE46",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonEventC514B5CD": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleDefaultPolicy11FA01A0",
        "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleB5050EE6",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (testStack/rootmail.ses-receipt-ruleset-activation-provider/ses-receipt-ruleset-activation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "rootmailsesreceiptrulesetactivationproviderwaiterstatemachine93794458",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleB5050EE6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonEventLogRetentionA6742D46": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkonEventC514B5CD",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleB5050EE6": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleDefaultPolicy11FA01A0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "rootmailsesreceiptrulesetactivationproviderwaiterstatemachine93794458",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleDefaultPolicy11FA01A0",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleB5050EE6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRoleDefaultPolicy8A4A1F2A",
        "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRole845C2519",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (testStack/rootmail.ses-receipt-ruleset-activation-provider/ses-receipt-ruleset-activation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRole845C2519",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutLogRetention5763AF42": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRole845C2519": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRoleDefaultPolicy8A4A1F2A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRoleDefaultPolicy8A4A1F2A",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRole845C2519",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRoleDefaultPolicyFB99DF60",
        "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRole9D6CAFC0",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "7144c5a47b3904b1aa4b27be73803a4b684f4ef765d9df8fa767779d37106254.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRole9D6CAFC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationprovideriscompletehandlerLogRetention03F74C63": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRole9D6CAFC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRoleDefaultPolicyFB99DF60": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testRootmailEmailBucket2A470446",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testRootmailEmailBucket2A470446",
                          "Arn",
                        ],
                      },
                      "/RootMail/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRoleDefaultPolicyFB99DF60",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRole9D6CAFC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleDefaultPolicy92E90A6D",
        "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleA5C4F5B4",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "5f51435e0e5f70c296af0d3b37253d83760b806b3a30ab1ae862d67bd65d5010.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleA5C4F5B4",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationprovideroneventhandlerLogRetentionFD6A9185": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationproviderwaiterstatemachine93794458": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRoleDefaultPolicy64767BAC",
        "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRole069EB2EA",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":10,"MaxAttempts":12,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146",
                  "Arn",
                ],
              },
              ""},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9",
                  "Arn",
                ],
              },
              ""}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRole069EB2EA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRole069EB2EA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRoleDefaultPolicy64767BAC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRoleDefaultPolicy64767BAC",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRole069EB2EA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testRootmailEmailBucket2A470446": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "no server access logs needed",
            },
            {
              "id": "AwsSolutions-S10",
              "reason": "no SSL access needed",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testRootmailEmailBucketPolicy5DA39984": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S10",
              "reason": "no SSL access needed",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "testRootmailEmailBucket2A470446",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "ses.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "testRootmailEmailBucket2A470446",
                        "Arn",
                      ],
                    },
                    "/RootMail/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testRootmailHostedZone6DFD3C9C": {
      "Properties": {
        "Name": "aws.example.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Domain": "aws.example.com",
        "ServiceToken": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimverificationrecordsproviderframeworkonEvent801E57DE",
            "Arn",
          ],
        },
      },
      "Type": "Custom::HostedZoneDKIMAndVerificationRecords",
      "UpdateReplacePolicy": "Delete",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMPropagation1F03F92B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Domain": "aws.example.com",
        "ServiceToken": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderframeworkonEvent15357119",
            "Arn",
          ],
        },
      },
      "Type": "Custom::HostedZoneDKIMPropagation",
      "UpdateReplacePolicy": "Delete",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMTokenRecord07A3BA244": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::GetAtt": [
                      "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                      "DkimTokens",
                    ],
                  },
                ],
              },
              "._domainkey.aws.example.com.",
            ],
          ],
        },
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::GetAtt": [
                        "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                        "DkimTokens",
                      ],
                    },
                  ],
                },
                ".dkim.amazonses.com",
              ],
            ],
          },
        ],
        "TTL": "60",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMTokenRecord135221F6A": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::GetAtt": [
                      "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                      "DkimTokens",
                    ],
                  },
                ],
              },
              "._domainkey.aws.example.com.",
            ],
          ],
        },
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::GetAtt": [
                        "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                        "DkimTokens",
                      ],
                    },
                  ],
                },
                ".dkim.amazonses.com",
              ],
            ],
          },
        ],
        "TTL": "60",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMTokenRecord2175A1558": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Select": [
                  2,
                  {
                    "Fn::GetAtt": [
                      "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                      "DkimTokens",
                    ],
                  },
                ],
              },
              "._domainkey.aws.example.com.",
            ],
          ],
        },
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    2,
                    {
                      "Fn::GetAtt": [
                        "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                        "DkimTokens",
                      ],
                    },
                  ],
                },
                ".dkim.amazonses.com",
              ],
            ],
          },
        ],
        "TTL": "60",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimHostedZoneMXRecord4446D9D3": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": "aws.example.com.",
        "ResourceRecords": [
          "10 inbound-smtp.us-east-1.amazonaws.com",
        ],
        "TTL": "60",
        "Type": "MX",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimHostedZoneVerificationTokenRecord80FAE944": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": "_amazonses.aws.example.com.",
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                """,
                {
                  "Fn::GetAtt": [
                    "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                    "VerificationToken",
                  ],
                },
                """,
              ],
            ],
          },
        ],
        "TTL": "60",
        "Type": "TXT",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimRootmailAutowireDnsAutoWireR53ChangeInfoId609129D7": {
      "Properties": {
        "Name": "/rootmail/auto_wire_r53_changeinfo_id",
        "Type": "String",
        "Value": "dummy",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "testRootmailHostedZoneDkimRootmailAutowireDnsE60E593E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Domain": "example.com",
        "HostedZoneParameterName": {
          "Ref": "testRootmailHostedZoneSSMParameter574DA41C",
        },
        "ParentHostedZoneId": "HZX1234",
        "R53ChangeInfoIdParameterName": {
          "Ref": "testRootmailHostedZoneDkimRootmailAutowireDnsAutoWireR53ChangeInfoId609129D7",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventAA9D49B6",
            "Arn",
          ],
        },
        "Subdomain": "aws",
      },
      "Type": "Custom::RootmailAutowireDnsProvider",
      "UpdateReplacePolicy": "Delete",
    },
    "testRootmailHostedZoneSSMParameter574DA41C": {
      "Properties": {
        "Name": "/rootmail/domain_name_servers",
        "Type": "StringList",
        "Value": {
          "Fn::Join": [
            ",",
            {
              "Fn::GetAtt": [
                "testRootmailHostedZone6DFD3C9C",
                "NameServers",
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "testRootmailSESReceiveOpsSantaFunctionRole82D7297F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok as we allow every opsitem to be created",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "testRootmailEmailBucket2A470446",
                            "Arn",
                          ],
                        },
                        "/RootMail/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": "ssm:CreateOpsItem",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ssm:PutParameter",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:us-east-1:1234:parameter/rootmail/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "OpsSantaFunctionRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testRootmailSESReceiveSESReceiptRuleSetActivation75911DB8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Domain": "example.com",
        "EmailBucketName": {
          "Ref": "testRootmailEmailBucket2A470446",
        },
        "OpsSantaFunctionArn": {
          "Fn::GetAtt": [
            "testRootmailSESReceiveopssantahandler9628381A",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderframeworkonEventC514B5CD",
            "Arn",
          ],
        },
        "Subdomain": "aws",
      },
      "Type": "Custom::SESReceiptRuleSetActivation",
      "UpdateReplacePolicy": "Delete",
    },
    "testRootmailSESReceiveopssantahandler9628381A": {
      "DependsOn": [
        "testRootmailSESReceiveOpsSantaFunctionRole82D7297F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "a9f75b7132a874d82148ba09139ac31ec713ceea24bb06b0b32c236df861dae0.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "EMAIL_BUCKET": {
              "Ref": "testRootmailEmailBucket2A470446",
            },
            "EMAIL_BUCKET_ARN": {
              "Fn::GetAtt": [
                "testRootmailEmailBucket2A470446",
                "Arn",
              ],
            },
            "ROOTMAIL_DEPLOY_REGION": "us-east-1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "testRootmailSESReceiveOpsSantaFunctionRole82D7297F",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "testRootmailSESReceiveopssantahandlerLogRetention23A4ECDE": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "testRootmailSESReceiveopssantahandler9628381A",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "testRootmailSESReceiveopssantahandlerOpsSantaFunctionSESPermissionsEAD3AD06": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "testRootmailSESReceiveopssantahandler9628381A",
            "Arn",
          ],
        },
        "Principal": "ses.amazonaws.com",
        "SourceAccount": "1234",
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`rootmail-autoDns rootmail-no-autoDNSEnable 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "5cc92ed0cea39e2b8de2dbc527dfb5980a3af9564bd1084d840b9787c7d0467e.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsprovideriscompletehandlerBFD3F7F5": {
      "DependsOn": [
        "rootmailautowirednsprovideriscompletehandlerServiceRoleDefaultPolicy7DA8ECD2",
        "rootmailautowirednsprovideriscompletehandlerServiceRole35CABB06",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "409d1db869dd0ed635bff94c855031afc92e9ac918a5d09651dd0b5316db1433.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsprovideriscompletehandlerServiceRole35CABB06",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsprovideriscompletehandlerLogRetention304C1822": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailautowirednsprovideriscompletehandlerServiceRole35CABB06": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsprovideriscompletehandlerServiceRoleDefaultPolicy7DA8ECD2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "route53:ListHostedZonesByName",
                "route53:GetChange",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:1234:parameter",
                    {
                      "Ref": "testRootmailHostedZoneDkimRootmailAutowireDnsAutoWireR53ChangeInfoId609129D7",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsprovideriscompletehandlerServiceRoleDefaultPolicy7DA8ECD2",
        "Roles": [
          {
            "Ref": "rootmailautowirednsprovideriscompletehandlerServiceRole35CABB06",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsprovideroneventhandler2ADE543F": {
      "DependsOn": [
        "rootmailautowirednsprovideroneventhandlerServiceRoleDefaultPolicy4A5BBAB1",
        "rootmailautowirednsprovideroneventhandlerServiceRole6D9F81B0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "aca912f8a6aebc5dfd423aff79785b8fd7488473a4cf93aaa7ad0e442b548787.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsprovideroneventhandlerServiceRole6D9F81B0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 160,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsprovideroneventhandlerLogRetentionA4DB1AD5": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailautowirednsprovideroneventhandler2ADE543F",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailautowirednsprovideroneventhandlerServiceRole6D9F81B0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsprovideroneventhandlerServiceRoleDefaultPolicy4A5BBAB1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:1234:parameter",
                    {
                      "Ref": "testRootmailHostedZoneSSMParameter574DA41C",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:1234:parameter",
                    {
                      "Ref": "testRootmailHostedZoneDkimRootmailAutowireDnsAutoWireR53ChangeInfoId609129D7",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "route53:ListHostedZonesByName",
                "route53:GetChange",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsprovideroneventhandlerServiceRoleDefaultPolicy4A5BBAB1",
        "Roles": [
          {
            "Ref": "rootmailautowirednsprovideroneventhandlerServiceRole6D9F81B0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteC48DABD2": {
      "DependsOn": [
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleDefaultPolicy5728F288",
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleD15A96AC",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (testStack/rootmail.autowire-dns-provider/rootmail-autowire-dns-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideroneventhandler2ADE543F",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleD15A96AC",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleD15A96AC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleDefaultPolicy5728F288": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideroneventhandler2ADE543F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideroneventhandler2ADE543F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleDefaultPolicy5728F288",
        "Roles": [
          {
            "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteServiceRoleD15A96AC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventAA9D49B6": {
      "DependsOn": [
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleDefaultPolicy16D799D5",
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleECC96780",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (testStack/rootmail.autowire-dns-provider/rootmail-autowire-dns-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideroneventhandler2ADE543F",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachine81102355",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleECC96780",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleDefaultPolicy16D799D5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideroneventhandler2ADE543F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideroneventhandler2ADE543F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachine81102355",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleDefaultPolicy16D799D5",
        "Roles": [
          {
            "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleECC96780",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventServiceRoleECC96780": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutC714B95F": {
      "DependsOn": [
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRoleDefaultPolicy53D3B624",
        "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRole4383D224",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (testStack/rootmail.autowire-dns-provider/rootmail-autowire-dns-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailautowirednsprovideroneventhandler2ADE543F",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRole4383D224",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRole4383D224": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRoleDefaultPolicy53D3B624": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideroneventhandler2ADE543F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideroneventhandler2ADE543F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsprovideriscompletehandlerBFD3F7F5",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRoleDefaultPolicy53D3B624",
        "Roles": [
          {
            "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutServiceRole4383D224",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachine81102355": {
      "DependsOn": [
        "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRoleDefaultPolicy310226B4",
        "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRole258A7061",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":5,"MaxAttempts":1440,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteC48DABD2",
                  "Arn",
                ],
              },
              ""},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutC714B95F",
                  "Arn",
                ],
              },
              ""}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRole258A7061",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRole258A7061": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRoleDefaultPolicy310226B4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteC48DABD2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsproviderrootmailautowirednsproviderframeworkisCompleteC48DABD2",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutC714B95F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonTimeoutC714B95F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRoleDefaultPolicy310226B4",
        "Roles": [
          {
            "Ref": "rootmailautowirednsproviderrootmailautowirednsproviderwaiterstatemachineRole258A7061",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkisComplete165FE163": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRoleDefaultPolicy02D0AEA6",
        "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRole9BABA5E5",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (testStack/rootmail.hosted-zone-dkim-propagation-provider/hosted-zone-dkim-propagation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRole9BABA5E5",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRole9BABA5E5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRoleDefaultPolicy02D0AEA6": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRoleDefaultPolicy02D0AEA6",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationproviderframeworkisCompleteServiceRole9BABA5E5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonEvent15357119": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRoleDefaultPolicy68675555",
        "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRole5729BE95",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (testStack/rootmail.hosted-zone-dkim-propagation-provider/hosted-zone-dkim-propagation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "rootmailhostedzonedkimpropagationproviderwaiterstatemachine2C629ADB",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRole5729BE95",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRole5729BE95": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRoleDefaultPolicy68675555": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "rootmailhostedzonedkimpropagationproviderwaiterstatemachine2C629ADB",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRoleDefaultPolicy68675555",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationproviderframeworkonEventServiceRole5729BE95",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonTimeout7D8A73CD": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleDefaultPolicy2FF6168E",
        "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleB169BF13",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (testStack/rootmail.hosted-zone-dkim-propagation-provider/hosted-zone-dkim-propagation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleB169BF13",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleB169BF13": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleDefaultPolicy2FF6168E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleDefaultPolicy2FF6168E",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationproviderframeworkonTimeoutServiceRoleB169BF13",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDefaultPolicy57D46916",
        "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDFD2C35E",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the ses mail verification",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f61472ea141af20f69ebb7a7718158fcb95d72410c0c2a2e72cc59b1822873fc.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDFD2C35E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationprovideriscompletehandlerLogRetentionA997105A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the ses mail verification",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailhostedzonedkimpropagationprovideriscompletehandlerB67C8E91",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDFD2C35E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the ses mail verification",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDefaultPolicy57D46916": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the ses mail verification",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:GetIdentityVerificationAttributes",
                "ses:GetAccountSendingEnabled",
                "ses:GetIdentityDkimAttributes",
                "ses:GetIdentityNotificationAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDefaultPolicy57D46916",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationprovideriscompletehandlerServiceRoleDFD2C35E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationprovideroneventhandlerServiceRole02FD73CE",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok as the function by itself does nothing",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "11768574bbd12c5ed10f463a68797423c366b61535ebc1b14951661b92657fa5.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationprovideroneventhandlerServiceRole02FD73CE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimpropagationprovideroneventhandlerLogRetentionD97E8A18": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok as the function by itself does nothing",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailhostedzonedkimpropagationprovideroneventhandlerC59BDC16",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailhostedzonedkimpropagationprovideroneventhandlerServiceRole02FD73CE": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok as the function by itself does nothing",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderwaiterstatemachine2C629ADB": {
      "DependsOn": [
        "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRoleDefaultPolicy70368CA0",
        "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRole40906579",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":10,"MaxAttempts":180,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailhostedzonedkimpropagationproviderframeworkisComplete165FE163",
                  "Arn",
                ],
              },
              ""},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailhostedzonedkimpropagationproviderframeworkonTimeout7D8A73CD",
                  "Arn",
                ],
              },
              ""}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRole40906579",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRole40906579": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRoleDefaultPolicy70368CA0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationproviderframeworkisComplete165FE163",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationproviderframeworkisComplete165FE163",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimpropagationproviderframeworkonTimeout7D8A73CD",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimpropagationproviderframeworkonTimeout7D8A73CD",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRoleDefaultPolicy70368CA0",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimpropagationproviderwaiterstatemachineRole40906579",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimverificationrecordsproviderframeworkonEvent801E57DE": {
      "DependsOn": [
        "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleDefaultPolicy2775D1BA",
        "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleA09812EA",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (testStack/rootmail.hosted-zone-dkim-verification-records-provider/hosted-zone-dkim-verification-records-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleA09812EA",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventLogRetention64AEF97C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailhostedzonedkimverificationrecordsproviderframeworkonEvent801E57DE",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleA09812EA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleDefaultPolicy2775D1BA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleDefaultPolicy2775D1BA",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimverificationrecordsproviderframeworkonEventServiceRoleA09812EA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE": {
      "DependsOn": [
        "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRoleDefaultPolicy5C0E86C8",
        "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRole83E5B139",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "a0f9d47d625e1e17d1946bc138cc46c9b7ecb7136dc54cf26af266b0e30b4e15.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRole83E5B139",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 200,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerLogRetentionCA165FC4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerADD3C0BE",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRole83E5B139": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRoleDefaultPolicy5C0E86C8": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:VerifyDomainDkim",
                "ses:VerifyDomainIdentity",
                "ses:DeleteIdentity",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRoleDefaultPolicy5C0E86C8",
        "Roles": [
          {
            "Ref": "rootmailhostedzonedkimverificationrecordsprovideroneventhandlerServiceRole83E5B139",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleA5C4F5B4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleDefaultPolicy92E90A6D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:CreateReceiptRuleSet",
                "ses:CreateReceiptRule",
                "ses:SetActiveReceiptRuleSet",
                "ses:DeleteReceiptRule",
                "ses:DeleteReceiptRuleSet",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleDefaultPolicy92E90A6D",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleA5C4F5B4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleDefaultPolicy8A8828E7",
        "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleCFD6EE46",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (testStack/rootmail.ses-receipt-ruleset-activation-provider/ses-receipt-ruleset-activation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleCFD6EE46",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteLogRetention13DDD3A2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleCFD6EE46": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleDefaultPolicy8A8828E7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleDefaultPolicy8A8828E7",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkisCompleteServiceRoleCFD6EE46",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonEventC514B5CD": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleDefaultPolicy11FA01A0",
        "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleB5050EE6",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (testStack/rootmail.ses-receipt-ruleset-activation-provider/ses-receipt-ruleset-activation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "rootmailsesreceiptrulesetactivationproviderwaiterstatemachine93794458",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleB5050EE6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonEventLogRetentionA6742D46": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkonEventC514B5CD",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleB5050EE6": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleDefaultPolicy11FA01A0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "rootmailsesreceiptrulesetactivationproviderwaiterstatemachine93794458",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleDefaultPolicy11FA01A0",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkonEventServiceRoleB5050EE6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRoleDefaultPolicy8A4A1F2A",
        "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRole845C2519",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (testStack/rootmail.ses-receipt-ruleset-activation-provider/ses-receipt-ruleset-activation-provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRole845C2519",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutLogRetention5763AF42": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRole845C2519": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRoleDefaultPolicy8A4A1F2A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRoleDefaultPolicy8A4A1F2A",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderframeworkonTimeoutServiceRole845C2519",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRoleDefaultPolicyFB99DF60",
        "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRole9D6CAFC0",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "7144c5a47b3904b1aa4b27be73803a4b684f4ef765d9df8fa767779d37106254.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRole9D6CAFC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationprovideriscompletehandlerLogRetention03F74C63": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationprovideriscompletehandler676C1A14",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRole9D6CAFC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRoleDefaultPolicyFB99DF60": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testRootmailEmailBucket2A470446",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testRootmailEmailBucket2A470446",
                          "Arn",
                        ],
                      },
                      "/RootMail/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRoleDefaultPolicyFB99DF60",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationprovideriscompletehandlerServiceRole9D6CAFC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleDefaultPolicy92E90A6D",
        "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleA5C4F5B4",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "5f51435e0e5f70c296af0d3b37253d83760b806b3a30ab1ae862d67bd65d5010.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderSesReceiptRuleSetActivationCustomResourceRoleA5C4F5B4",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootmailsesreceiptrulesetactivationprovideroneventhandlerLogRetentionFD6A9185": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rootmailsesreceiptrulesetactivationprovideroneventhandler8E245877",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "rootmailsesreceiptrulesetactivationproviderwaiterstatemachine93794458": {
      "DependsOn": [
        "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRoleDefaultPolicy64767BAC",
        "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRole069EB2EA",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":10,"MaxAttempts":12,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146",
                  "Arn",
                ],
              },
              ""},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9",
                  "Arn",
                ],
              },
              ""}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRole069EB2EA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRole069EB2EA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRoleDefaultPolicy64767BAC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok for the provider as the function has restrictions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationproviderframeworkisComplete17519146",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "rootmailsesreceiptrulesetactivationproviderframeworkonTimeout85CF91B9",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRoleDefaultPolicy64767BAC",
        "Roles": [
          {
            "Ref": "rootmailsesreceiptrulesetactivationproviderwaiterstatemachineRole069EB2EA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testRootmailEmailBucket2A470446": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "no server access logs needed",
            },
            {
              "id": "AwsSolutions-S10",
              "reason": "no SSL access needed",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testRootmailEmailBucketPolicy5DA39984": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S10",
              "reason": "no SSL access needed",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "testRootmailEmailBucket2A470446",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "ses.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "testRootmailEmailBucket2A470446",
                        "Arn",
                      ],
                    },
                    "/RootMail/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testRootmailHostedZone6DFD3C9C": {
      "Properties": {
        "Name": "aws.example.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Domain": "aws.example.com",
        "ServiceToken": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimverificationrecordsproviderframeworkonEvent801E57DE",
            "Arn",
          ],
        },
      },
      "Type": "Custom::HostedZoneDKIMAndVerificationRecords",
      "UpdateReplacePolicy": "Delete",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMPropagation1F03F92B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Domain": "aws.example.com",
        "ServiceToken": {
          "Fn::GetAtt": [
            "rootmailhostedzonedkimpropagationproviderframeworkonEvent15357119",
            "Arn",
          ],
        },
      },
      "Type": "Custom::HostedZoneDKIMPropagation",
      "UpdateReplacePolicy": "Delete",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMTokenRecord07A3BA244": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::GetAtt": [
                      "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                      "DkimTokens",
                    ],
                  },
                ],
              },
              "._domainkey.aws.example.com.",
            ],
          ],
        },
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::GetAtt": [
                        "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                        "DkimTokens",
                      ],
                    },
                  ],
                },
                ".dkim.amazonses.com",
              ],
            ],
          },
        ],
        "TTL": "60",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMTokenRecord135221F6A": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::GetAtt": [
                      "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                      "DkimTokens",
                    ],
                  },
                ],
              },
              "._domainkey.aws.example.com.",
            ],
          ],
        },
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::GetAtt": [
                        "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                        "DkimTokens",
                      ],
                    },
                  ],
                },
                ".dkim.amazonses.com",
              ],
            ],
          },
        ],
        "TTL": "60",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimHostedZoneDKIMTokenRecord2175A1558": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Select": [
                  2,
                  {
                    "Fn::GetAtt": [
                      "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                      "DkimTokens",
                    ],
                  },
                ],
              },
              "._domainkey.aws.example.com.",
            ],
          ],
        },
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    2,
                    {
                      "Fn::GetAtt": [
                        "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                        "DkimTokens",
                      ],
                    },
                  ],
                },
                ".dkim.amazonses.com",
              ],
            ],
          },
        ],
        "TTL": "60",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimHostedZoneMXRecord4446D9D3": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": "aws.example.com.",
        "ResourceRecords": [
          "10 inbound-smtp.us-east-1.amazonaws.com",
        ],
        "TTL": "60",
        "Type": "MX",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimHostedZoneVerificationTokenRecord80FAE944": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "testRootmailHostedZone6DFD3C9C",
        },
        "Name": "_amazonses.aws.example.com.",
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                """,
                {
                  "Fn::GetAtt": [
                    "testRootmailHostedZoneDkimHostedZoneDKIMAndVerificationRecords3C4650B2",
                    "VerificationToken",
                  ],
                },
                """,
              ],
            ],
          },
        ],
        "TTL": "60",
        "Type": "TXT",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testRootmailHostedZoneDkimRootmailAutowireDnsAutoWireR53ChangeInfoId609129D7": {
      "Properties": {
        "Name": "/rootmail/auto_wire_r53_changeinfo_id",
        "Type": "String",
        "Value": "dummy",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "testRootmailHostedZoneDkimRootmailAutowireDnsE60E593E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Domain": "example.com",
        "HostedZoneParameterName": {
          "Ref": "testRootmailHostedZoneSSMParameter574DA41C",
        },
        "R53ChangeInfoIdParameterName": {
          "Ref": "testRootmailHostedZoneDkimRootmailAutowireDnsAutoWireR53ChangeInfoId609129D7",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "rootmailautowirednsproviderrootmailautowirednsproviderframeworkonEventAA9D49B6",
            "Arn",
          ],
        },
        "Subdomain": "aws",
      },
      "Type": "Custom::RootmailAutowireDnsProvider",
      "UpdateReplacePolicy": "Delete",
    },
    "testRootmailHostedZoneSSMParameter574DA41C": {
      "Properties": {
        "Name": "/rootmail/domain_name_servers",
        "Type": "StringList",
        "Value": {
          "Fn::Join": [
            ",",
            {
              "Fn::GetAtt": [
                "testRootmailHostedZone6DFD3C9C",
                "NameServers",
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "testRootmailSESReceiveOpsSantaFunctionRole82D7297F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "no service role restriction needed",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "wildcards are ok as we allow every opsitem to be created",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "testRootmailEmailBucket2A470446",
                            "Arn",
                          ],
                        },
                        "/RootMail/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": "ssm:CreateOpsItem",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ssm:PutParameter",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:us-east-1:1234:parameter/rootmail/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "OpsSantaFunctionRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testRootmailSESReceiveSESReceiptRuleSetActivation75911DB8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Domain": "example.com",
        "EmailBucketName": {
          "Ref": "testRootmailEmailBucket2A470446",
        },
        "OpsSantaFunctionArn": {
          "Fn::GetAtt": [
            "testRootmailSESReceiveopssantahandler9628381A",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "rootmailsesreceiptrulesetactivationproviderframeworkonEventC514B5CD",
            "Arn",
          ],
        },
        "Subdomain": "aws",
      },
      "Type": "Custom::SESReceiptRuleSetActivation",
      "UpdateReplacePolicy": "Delete",
    },
    "testRootmailSESReceiveopssantahandler9628381A": {
      "DependsOn": [
        "testRootmailSESReceiveOpsSantaFunctionRole82D7297F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234-us-east-1",
          "S3Key": "a9f75b7132a874d82148ba09139ac31ec713ceea24bb06b0b32c236df861dae0.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "EMAIL_BUCKET": {
              "Ref": "testRootmailEmailBucket2A470446",
            },
            "EMAIL_BUCKET_ARN": {
              "Fn::GetAtt": [
                "testRootmailEmailBucket2A470446",
                "Arn",
              ],
            },
            "ROOTMAIL_DEPLOY_REGION": "us-east-1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "testRootmailSESReceiveOpsSantaFunctionRole82D7297F",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "testRootmailSESReceiveopssantahandlerLogRetention23A4ECDE": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "testRootmailSESReceiveopssantahandler9628381A",
              },
            ],
          ],
        },
        "RetentionInDays": 3,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "testRootmailSESReceiveopssantahandlerOpsSantaFunctionSESPermissionsEAD3AD06": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "testRootmailSESReceiveopssantahandler9628381A",
            "Arn",
          ],
        },
        "Principal": "ses.amazonaws.com",
        "SourceAccount": "1234",
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
